package encode

import (
	"fmt"
	"testing"

	"github.com/dcaravel/stackrox-deserialize/internal/decode"
	"github.com/stretchr/testify/assert"
)

func TestNameTypeDetect(t *testing.T) {
	tcs := []struct {
		expectedName string
		data         string
	}{
		{
			"Blob",
			`\x0a262f6c6f63616c63616368652f65787465726e616c2d6e6574776f726b732f636865636b73756d10e18c0120402a0c08cc8788c10610fbfcc48d02320c08cc8788c106108d86c58d02`,
		},
		{
			"DelegatedRegistryConfig",
			`\x0801122463663436363334362d633837652d343737372d386165392d6631643061313666303161641a060a04617364661a2c0a0466646173122463663436363334362d633837652d343737372d386165392d663164306131366630316164`,
		},
		{
			"ImageIntegration",
			`\x0a2431306433623464632d383239352d343162632d626235302d36646135343834636462316112105075626c696320446f636b65724875621a06646f636b65723201004a160a1472656769737472792d312e646f636b65722e696f`,
		},
		{
			"Alert",
			`\x0a2434303439346462642d383739382d343163662d393961612d376533633236653233613039128f050a2461393139636361662d366234332d343136302d616335642d613430356531343430613431122346697861626c65205365766572697479206174206c6561737420496d706f7274616e741a5b416c657274206f6e206465706c6f796d656e747320776974682066697861626c652076756c6e65726162696c69746965732077697468206120536576657269747920526174696e67206174206c6561737420496d706f7274616e7422be014b6e6f776e2076756c6e65726162696c6974696573206d616b652069742065617369657220666f7220616476657273617269657320746f206578706c6f697420796f7572206170706c69636174696f6e2e20596f752063616e2066697820746865736520686967682d73657665726974792076756c6e65726162696c6974696573206279207570646174696e6720746f2061206e657765722076657273696f6e206f662074686520616666656374656420636f6d706f6e656e742873292e2a880155736520796f7572207061636b616765206d616e6167657220746f2075706461746520746f20612066697865642076657273696f6e20696e20667574757265206275696c6473206f7220737065616b207769746820796f7572207365637572697479207465616d20746f206d69746967617465207468652076756c6e65726162696c69746965732e3a1856756c6e65726162696c697479204d616e6167656d656e744a02010060036a010482012346697861626c65205365766572697479206174206c6561737420496d706f7274616e748a010c4255494c442c4445504c4f599001019a0103312e31a2012e1a100a08466978656420427922040a022e2a1a1a0a085365766572697479220e0a0c3e3d20494d504f5254414e54c00101c80101d001012aaf010aac0146697861626c65204356452d323032352d323238363920284356535320372e35292028736576657269747920496d706f7274616e742920666f756e6420696e20636f6d706f6e656e742027676f6c616e672e6f72672f782f63727970746f27202876657273696f6e2076302e33322e302920696e20636f6e7461696e6572202772656769737472792d736572766572272c207265736f6c7665642062792076657273696f6e20302e33352e303a0c08c09d89c10610c382c1e901520c08c09d89c10610c382c1e90158028a010c08c09d89c10610d6d1b0a00292012463663436363334362d633837652d343737372d386165392d6631643061313666303161649a010672656d6f7465a201156f70656e73686966742d6d61726b6574706c616365aa012430313230393436642d656639362d343639612d386338632d663031306264336466383737b00101b8010122e6060a2466323437656435332d356534362d346632392d626631652d3034303138343638343834311219636f6d6d756e6974792d6f70657261746f72732d78626735742203506f642a156f70656e73686966742d6d61726b6574706c6163653a400a29636174616c6f67736f757263652e6f70657261746f72732e636f72656f732e636f6d2f7570646174651213636f6d6d756e6974792d6f70657261746f72733a150a116f6c6d2e636174616c6f67536f7572636512003a130a0b6f6c6d2e6d616e616765641204747275653a3b0a116f6c6d2e706f642d737065632d6861736812263863486f6167487a5957704636433947734e7a547a6f496c4a366e7a5a34593452426352714b4a2463663436363334362d633837652d343737372d386165392d663164306131366630316164520672656d6f74655a89021af5010aa9010a07717561792e696f12266f70656e73686966742d72656c656173652d6465762f6f63702d76342e302d6172742d6465762276717561792e696f2f6f70656e73686966742d72656c656173652d6465762f6f63702d76342e302d6172742d646576407368613235363a3831616532356336646663326663386135646632333735373266353335613038633833613362643065333735353562323333323934306238353063313763613022477368613235363a38316165323563366466633266633861356466323337353732663533356130386338336133626430653337353535623233333239343062383530633137636130520f72656769737472792d736572766572723b0a28736563636f6d702e73656375726974792e616c7068612e6b756265726e657465732e696f2f706f64120f72756e74696d652f64656661756c7472360a2e636c75737465722d6175746f7363616c65722e6b756265726e657465732e696f2f736166652d746f2d6576696374120474727565722a0a196f70656e73686966742e696f2f72657175697265642d736363120d726573747269637465642d763272210a106f70656e73686966742e696f2f736363120d726573747269637465642d763272370a1f6f70657261746f726672616d65776f726b2e696f2f6d616e616765642d627912146d61726b6574706c6163652d6f70657261746f7282012430313230393436642d656639362d343639612d386338632d663031306264336466383737`,
		},
		{
			"Image",
			`\`,
		},
	}
	for _, tc := range tcs {
		t.Run(tc.expectedName, func(t *testing.T) {
			dataB, err := decode.Hex([]byte(tc.data))
			assert.NoError(t, err)

			entries, err := JSONAll(dataB)
			assert.NoError(t, err)
			assert.NotEmpty(t, entries)

			first := entries[0].Name
			if tc.expectedName != first {
				for _, e := range entries {
					fmt.Printf("name: %s, datalen: %d, len(protojson): %d, len(rawjson) %d, numfields: %d, sizeof: %d\n", e.Name, e.DataLen, len(e.ProtoJSON), len(e.RawJSON), e.NumFields, e.SizeOf)
				}
				assert.Equal(t, tc.expectedName, first)
			}
		})
	}
}

func TestDataLen(t *testing.T) {
	data := []byte(`{"name": "steve", "age": 30, "flag": false, "otherFlag": true, "more": {"stuff": "1234567890"}}`)

	// assert.Equal(t, dataLen(data), 5+1+1
	r := dataLen(data)
	t.Logf("r = %v", r)

}
